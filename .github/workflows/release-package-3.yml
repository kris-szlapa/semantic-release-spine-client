name: Release GitHub Package 3

on:
  workflow_dispatch:

jobs:
  get-next-version:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - uses: volta-cli/action@v4
      - run: npm ci
      - run: npx semantic-release --dry-run
        id: get-next-version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

    outputs:
      new-release-published: ${{ steps.get-next-version.outputs.new-release-published }}
      new-release-version: ${{ steps.get-next-version.outputs.new-release-version }}

  release:
    runs-on: ubuntu-latest

    needs: get-next-version

    steps:
      - run: echo "The new release version is ${{ needs.get-next-version.outputs.new-release-version }}"
      - run: echo "The new published version is ${{ needs.get-next-version.outputs.new-release-published }}"
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - uses: volta-cli/action@v4
      - run: npm ci
      - run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish:
    runs-on: ubuntu-latest

    needs: get-next-version

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: "14" # Adjust the node version as needed
          registry-url: "https://npm.pkg.github.com"
          scope: "@kris-szlapa"

      - run: |
          npm ci
          # Incrementing the version in package.json
          npm version patch  # or minor/major depending on your versioning strategy
          NEW_VERSION=$(node -p "require('./package.json').version")

      - run: |
          # Commit the updated package.json and push the changes
          git config user.name "Your GitHub Actions"
          git config user.email "actions@github.com"
          git add package.json
          git commit -m "Bump version to $NEW_VERSION"
          git push origin HEAD:main

      - run: |
          # Wait for a short period to ensure the new version is available
          sleep 10
          # Publish with the updated version
          npm publish --tag latest --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
